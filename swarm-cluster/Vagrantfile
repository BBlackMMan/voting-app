# -*- mode: ruby -*-
# vi: set ft=ruby :

NODES = {
  "manager1" => "192.168.99.100",
  "worker1"  => "192.168.99.101",
  "worker2"  => "192.168.99.102",
}

Vagrant.configure("2") do |config|
  NODES.each do |(node_name, ip_address)|
    config.vm.define node_name do |node|
      node.vm.box = "bento/ubuntu-20.04"
      node.vm.hostname = node_name
      node.vm.network "private_network", ip: ip_address

      node.vm.provider "vmware_desktop" do |v|
        v.vmx["displayname"] = node_name
        v.vmx["memsize"] = "1024"
        v.vmx["numvcpus"] = "1"
      end

      node.vm.provision "shell", inline: <<-SHELL
        # Configuration des hÃ´tes
        #{NODES.map{ |n_name, ip| "echo '#{ip} #{n_name}' | sudo tee -a /etc/hosts" }.join("\n")}

        curl -fsSL get.docker.com -o get-docker.sh
        CHANNEL=stable sh get-docker.sh
        rm get-docker.sh

        sudo systemctl enable docker
        sudo systemctl start docker

        if [[ "#{node_name}" == "manager1" ]]; then
          docker swarm init --advertise-addr #{NODES["manager1"]}
          docker swarm join-token worker -q > /vagrant/worker_token.txt
        fi
      SHELL
    end
  end

  config.vm.define "worker1" do |worker|
    worker.vm.provision "shell", inline: <<-SHELL
      while [ ! -f /vagrant/worker_token.txt ]; do sleep 1; done
      docker swarm join --token $(cat /vagrant/worker_token.txt) #{NODES["manager1"]}:2377
    SHELL
  end

  config.vm.define "worker2" do |worker|
    worker.vm.provision "shell", inline: <<-SHELL
      while [ ! -f /vagrant/worker_token.txt ]; do sleep 1; done
      docker swarm join --token $(cat /vagrant/worker_token.txt) #{NODES["manager1"]}:2377
    SHELL
  end
end
